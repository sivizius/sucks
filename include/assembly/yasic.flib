Include 'include/assembly/yasic/expressions.flib'
Include 'include/assembly/yasic/operators.flib'
Include 'include/assembly/yasic/optimise.flib'
Include 'include/assembly/yasic/queque.flib'
Include 'include/assembly/yasic/stack.flib'
Include 'include/assembly/yasic/strings.flib'
Include 'include/assembly/yasic/types.flib'
Include 'include/assembly/yasic/variables.flib'
yasic@@lenStack                         =                                       ( 4096 * 16 )
yasic@@lenHelpStack                     =                                       ( 4096 * 16 )
yasic@@lenQueque                        =                                       ( 4096 * 16 )
yasic@@lenStrings                       =                                       ( 65536 )
yasic@@maxNumOfTypes                    =                                       256

Virtual                                 At null
  yasic@@lblStack::
    rb                                  ( yasic@@lenStack )
End Virtual
Virtual                                 At null
  yasic@@lblHelpStack::
    rb                                  ( yasic@@lenHelpStack )
End Virtual
Virtual                                 At null
  yasic@@lblQueque::
    rb                                  ( yasic@@lenQueque )
End Virtual
Virtual                                 At null
  yasic@@lblStrings::
    rb                                  ( yasic@@lenStrings )
End Virtual
Virtual                                 At null
  yasic@@lblTypes::
    rw                                  ( yasic@@maxNumOfTypes )
End Virtual

Struc assembly@@yasic                   someArguments&
  If ( defined yasic@@targetISA )
    fail 'assembly@@yasic', 'close previous yasic-environment before opening another one'
  End If
  Match                                 ===> instructionset=, parameters,       someArguments
    yasic@@targetISA                    assembly@@findInstructionSet            instructionset
    If ( yasic@@targetISA )
      .                                 yasic@@targetISA.init,                  parameters
    Else
      fail 'assembly@@yasic', 'unknown instructionset »', `instructionset, '«'
    End If
  Else Match                            ===> instructionset,                    someArguments
    yasic@@targetISA                    assembly@@findInstructionSet            instructionset
    If ( yasic@@targetISA )
      .                                 yasic@@targetISA.init
    Else
      fail 'assembly@@yasic', 'unknown instructionset »', `instructionset, '«'
    End If
  Else
    fail 'assembly@@yasic', 'target instructionset architecture must be set'
  End Match
  yasic@@ptrQueque                      =                                       null
  yasic@@endQueque                      =                                       null
  yasic@@ptrStack                       =                                       null
  yasic@@topStack                       =                                       null
  yasic@@ptrHelpStack                   =                                       null
  yasic@@topHelpStack                   =                                       null
  yasic@@ptrStrings                     =                                       null
  yasic@@endStrings                     =                                       null

  yasic@@global                         Equ                                     +
  yasic@@globalSymbols                  Equ
  yasic@@idOfNextGlobal                 =                                       null
  yasic@@localSymbols                   Equ
  yasic@@idOfNextLocal                  =                                       null

  Include 'include/assembly/yasic/ifwhile.flib'
  .yasic.init
  Macro assembly@@finaliser
    Restore yasic@@globalSymbols, yasic@@localSymbols
    Purge assembly@@finaliser
  End Macro
End Struc
assembly@@addInstructionSet             yasic,                                  assembly@@yasic

hazYasic                                Equ                                     +
