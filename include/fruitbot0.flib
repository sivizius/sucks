Include 'include/fruitbot/decode.flib'
Include 'include/fruitbot/opcodes.flib'
fbc0@@version                           =                                       0xc0fb
;( types )
;{
  fbc0@@tNothing                        =                                       0x00                                    ;empty operant
  fbc0@@tConstant                       =                                       0x01                                    ;value                is a constant value
  fbc0@@tString                         =                                       0x02                                    ;operant              is a constant string
  fbc0@@tAddress                        =                                       0x03                                    ;value                is at address=value
  fbc0@@tBuffer                         =                                       0x04                                    ;buffer/string        may lie at address=value
  fbc0@@tPointer                        =                                       0x05                                    ;value/buffer/string  is at an address pointed by address
  fbc0@@tVariable                       =                                       0x06                                    ;operant              is some kind of highlevel variable of fixed size
  fbc0@@tRegister                       =                                       0x07                                    ;operant              is a register
  fbc0@@tFunction                       =                                       0x08                                    ;operant              is a function
  fbc0@@tArgument                       =                                       0x09                                    ;an argument comes after this
  fbc0@@tTreeNode                       =                                       0x0a                                    ;its a tree-node
  fbc0@@tOperator                       =                                       0x0b                                    ;its a operator
  fbc0@@tStack                          =                                       0x0c                                    ;value is in the stack
  fbc0@@tUnknown                        =                                       0xff                                    ;unknown operant, should cause an fatal error!
;}
Macro fbc0@@code                        ignore&
  Local theCode, theMain
  Local theStrings, lblStrings, ptrStrings, offsStrings, lenStrings
  Macro fbc0@@instruction               opcode*
    db                                  opcode
  End Macro
  Macro fbc0@@operantByte               value*
    db                                  value
  End Macro
  Macro fbc0@@operantWord               value*
    dw                                  value
  End Macro
  Macro fbc0@@operantDWord              value*
    dd                                  value
  End Macro
  Macro fbc0@@operantQWord              value*
    dq                                  value
  End Macro
  Struc fbc0@@getToken
    .lenString                          =                                       lenStrings
  End Struc
  Virtual                               At null
    lblStrings::
      rb ( lenStrings )
  End Virtual
  offsStrings                           =                                       null
  Struc fbc0@@operantString             string*
    Local char, offs
    Virtual                             At null
      db string
      Store                             word ( $ )                              At   lblStrings:( offsStrings + 0x00 )
      Load                              char $                                  From ( null )
      Store                             $ char                                  At   lblStrings:( offsStrings + 0x02 )
      .                                 =                                       ( offsStrings + 2 )
      offsStrings                       =                                       ( offsStrings + $ + 2 )
    End Virtual
  End Struc
  Macro fbc0@@operantString             string*
    Local temp
    temp fbc0@@operantString            string
    db                                  temp
  End Macro
  Macro yapters@@codeFinaliser
    fbc0@@codeFinaliser
  End Macro
  Macro fbc0@@codeFinaliser
    Local char
      stop
      fbc0@@killMySelf
    theMain                             format@@endSpace                        ;</code>
    theCode                             yapters@@endYapter
    lenStrings                          =                                       offsStrings
    If ( lenStrings )
      yapters@@newYapter                yapters@@tStrings,                      null,               null, \
                                        null,                                   lenStrings,         theStrings.base
        format@@newSpace
          Load                          char lenStrings                         From lblStrings:( null )
          dbx                           ( lenStrings ): char
        ptrStrings                      format@@endSpace
      theStrings                        yapters@@endYapter
      fbc0@@decode                      theCode.absolute,             theCode.size,       ( theMain.offs - theCode.offs ), \
                                        theStrings.absolute,          theStrings.size
    Else
      theStrings                        =                                       ( 0xffffffff )
      fbc0@@decode                      theCode.absolute,             theCode.size,       ( theMain.offs - theCode.offs )
    End If
    Purge fbc0@@codeFinaliser
    Purge fbc0@@instruction, fbc0@@operantByte, fbc0@@operantWord, fbc0@@operantDWord, fbc0@@operantQWord, fbc0@@operantString, fbc0@@getToken
    Restruc fbc0@@operantString
  End Macro
  yapters@@newYapter                    yapters@@tBytecode,                     fbc0@@version,      theStrings, \
                                        ( theMain.offs - theCode.offs ),        theCode.size,       theCode.base
    format@@newSpace                                                            ;<code>
      include 'include/fruitbot/assembly.flib'
      fbc0@@function                    '__main__',         theMain.size,       null,               null
      format@@newSpace
        call                            ( theMain.offs )
        stop
      format@@endSpace
End Macro
yapters@@addCodeSpace                   fbc0,                                   fbc0@@code