Include 'include/main.flib'
Include 'include/display.flib'
Include 'include/assembly/x86.flib'
listing
  elf@@code_80386
    ;random@@randomiseOpcodes = true
    ;random@@randomiseOpcodeSize = true
    testPositive                          =                                     1
    ;( positive test, this should work )
    ;{
      Repeat ( testPositive )
        ;( static operand size )
        ;{
          aam                           20                                                                                                  ;simple instruction
          int                           2                                                                                                   ;simple instruction
          hlt                                                                                                                               ;simple instruction
          jz                            halt                                                                                                ;Jcc with sign extended 8 bit displacement
          jz                            0x1337                                                                                              ;Jcc with sign extended full displacement
          call                          0x0123:0x456789ab                                                                                   ;call far  procedure direct intersegment
          call                          dword [ 2 * edi + eax ]                                                                             ;call near procedure at address in memory
          call                          pword [ 2 * edi + eax ]                                                                             ;call far  procedure at address in memory
          call                          halt                                                                                                ;call near procedure with sign-extended full displacement
          call                          eax                                                                                                 ;call near procedure at address in register
          jmp                           halt                                                                                                ;jump to label short
          jmp                           0x1337                                                                                              ;jump to label long
          jmp                           0x0123:0x456789ab                                                                                   ;jump direct intersegment
          jmp                           eax                                                                                                 ;jump to address in register
          retf
          retf                          0x2342
          push                          0x12345678                                                                                          ;immediate value 32-bit
          push                          dword ( 0x1234 )                                                                                    ;immediate value 16-bit
          mov                           ss,                                     word [ edi ]                                                ;memory                   to    segment register
          mov                           ds,                                     dx                                                          ;register                 to    segment register
          mov                           dx,                                     es                                                          ;segment register         to    register
          mov                           word [ esi ],                           cs                                                          ;segment register         to    memory
          push                          cs                                                                                                  ;old segment register
          push                          gs                                                                                                  ;new segment register
          pop                           ds                                                                                                  ;old segment register
          pop                           fs                                                                                                  ;new segment register
          enter                         0x1234                                                                                              ;simple instruction
          leave                                                                                                                             ;simple instruction
          halt                          =                                       ( $ )                                                       ;label
          cts                                                                                                                               ;simple instruction
          lgdt                          pword [ bx ]                                                                                        ;simple instruction
          jecxz                         halt                                                                                                ;simple instruction
        ;}
        nop
        ;( 32-bit )
        ;{
          add                           esi,                                    edi                                                         ;register                 to    register
          add                           dword [ 2 * eax + edx ],                ecx                                                         ;register                 to    memory
          add                           ss:( 0x1337 ),                          ecx                                                         ;register                 to    direct memory
          add                           ebp,                                    dword [ ebp + esi ]                                         ;memory                   to    register
          add                           ebp,                                    es:( 0x2342 )                                               ;memory                   to    register
          add                           ecx,                                    0x23                                                        ;immediate sign extended  to    register
          add                           edx,                                    0x13372342                                                  ;immediate                to    register
          add                           dword [ ebp ],                          0x23                                                        ;immediate sign extended  to    memory
          add                           dword [ edi ],                          0x13372342                                                  ;immediate                to    memory
          add                           eax,                                    0x1337abcd                                                  ;immediate                to    accumulator
          ;---
          neg                           eax                                                                                                 ;register
          neg                           dword [ 3 * eax + 0x3412 ]                                                                          ;register
          ;---
          imul                          ecx                                                                                                 ;1-operand imul           with  register
          imul                          dword [ eax ]                                                                                       ;1-operand imul           with  memory
          imul                          edx:eax,                                ecx                                                         ;1-operand imul (better readable)
          imul                          ebx,                                    esi                                                         ;2-operand imul: ebx = ebx * esi
          imul                          ebx,                                    dword [ esi ]                                               ;2-operand imul: ebx = ebx * [ esi ]
          imul                          eax,                                    ecx,                                    0x23                ;3-operand imul: eax = ecx * sign-extended immediate value
          imul                          eax,                                    ecx,                                    0x1337              ;3-operand imul: eax = ecx * immediate value
          ;---
          movsd                                                                                                                             ;simple instruction
          ;---
          shl                           eax,                                    1                                                           ;register                 with  1
          shl                           eax,                                    3                                                           ;register                 with  1
          shr                           eax,                                    cl                                                          ;register                 with  cl
          ;---
          inc                           eax                                                                                                 ;register
          inc                           dword [ 2 * eax ]                                                                                   ;memory
          ;---
          lds                           eax,                                    [ ebx ]                                                     ;lds address to ds + register
          les                           eax,                                    [ ebx ]                                                     ;lds address to es + register
          lea                           eax,                                    [ ebp + esi ]                                               ;load effective address to register
          ;---
          cmp                           edx,                                    ebx                                                         ;register                 with  register
          cmp                           dword [ eax + 4 * ebx + 0x1337 ],       ecx                                                         ;register                 with  memory
          cmp                           edx,                                    dword [ eax + 2 * ebx + 0x2342 ]                            ;memory                   with  register
          cmp                           esi,                                    0x1234abcd                                                  ;immediate value          with  register
          cmp                           dword [ eax + 4 * ebx + 0x1337 ],       0x1234abcd                                                  ;immediate value          with  memory
          cmp                           eax,                                    0x2342abcd                                                  ;immediate value          with  accumulator
          ;---
          test                          edx,                                    ebx                                                         ;register                 with  register
          test                          dword [ eax + 4 * ebx + 0x1337 ],       ecx                                                         ;register                 with  memory
          test                          edx,                                    dword [ eax + 2 * ebx + 0x2342 ]                            ;memory                   with  register
          test                          esi,                                    0x1234abcd                                                  ;immediate value          with  register
          test                          dword [ eax + 4 * ebx + 0x1337 ],       0x1234abcd                                                  ;immediate value          with  memory
          test                          eax,                                    0x23421337                                                  ;immediate value          with  accumulator
          ;---
          push                          ebx                                                                                                 ;register
          push                          dword [ ecx + edx + 0x23 ]                                                                          ;memory
          pop                           ecx                                                                                                 ;register
          pop                           dword [ eax + ecx * 2 ]                                                                             ;memory
          ;---
          mov                           edx,                                    ebx                                                         ;register                 to    register
          mov                           dword [ edi ],                          esp                                                         ;register                 to    memory
          mov                           ebx,                                    dword [ esi ]                                               ;memory                   to    register
          mov                           edx,                                    0x13372342                                                  ;immediate                to    register
          mov                           dword [ eax + esi ],                    0x13372342                                                  ;immediate                to    memory
          mov                           ss:( 0x2342 ),                          eax                                                         ;accumulator              to    direct memory
          mov                           eax,                                    ss:( 0x2342 )                                               ;direct memory            to    accumulator
          ;---
          xchg                          ebx,                                    ecx                                                         ;register                 with  register
          xchg                          dword [ eax ],                          ebx                                                         ;register                 with  memory
          xchg                          ebx,                                    dword [ eax ]                                               ;should be the same as before
          ;---
          in                            eax,                                    0x23                                                        ;immediate port           to    accumulator
          in                            eax,                                    dx                                                          ;port given in dx         to    accumulator
          out                           0x12,                                   eax                                                         ;immediate port           from  accumulator
          out                           dx,                                     eax                                                         ;port given in dx         from  accumulator
          bound                         ebx,                                    qword [ eax ]                                               ;simple instruction
          lar                           ecx,                                    dx                                                          ;register
          lar                           ebx,                                    word [ edi ]                                                ;16 bit memory
          movzx                         eax,                                    bx                                                          ;16 bit register          to    register
          movzx                         eax,                                    bl                                                          ;8  bit register          to    register
          movzx                         eax,                                    word  [ esi ]                                               ;16 bit memory            to    register
          movzx                         eax,                                    byte  [ edi ]                                               ;8  bit memory            to    register
          shld                          ecx,                                    edx,                                    8                   ;register                 with  register and immediate value
          shld                          esp,                                    ebx,                                    cl                  ;register                 with  register and cl
          shld                          dword [ esi ],                          esi,                                    8                   ;memory                   with  register and immediate value
          shld                          dword [ edi ],                          edi,                                    cl                  ;memory                   with  register and cl
          bsr                           esi,                                    edx                                                         ;search register, result  to    register
          bsr                           esi,                                    dword [ eax + esi ]                                         ;search memory,   result  to    register
          bt                            ecx,                                    0x23                                                        ;register                 with  8 bit immediate value
          bt                            dword [ ecx ],                          0x23                                                        ;memory                   with  8 bit immediate value
          bt                            ecx,                                    ebx                                                         ;register                 with  register
          bt                            dword [ ecx ],                          ecx                                                         ;memory                   with  register
          mov                           cr0,                                    eax                                                         ;register                 to    control register
          mov                           ecx,                                    cr0                                                         ;control register         to    register
          mov                           dr0,                                    eax                                                         ;register                 to    debug register
          mov                           ecx,                                    dr0                                                         ;debug register           to    register
          mov                           tr6,                                    eax                                                         ;register                 to    test register
          mov                           ecx,                                    tr6                                                         ;test register            to    register
        ;}
        nop
        ;( 16-bit )
        ;{
          add                           si,                                     di                                                          ;register                 to    register
          add                           word  [ 2 * eax + edx ],                cx                                                          ;register                 to    memory
          add                           ss:( 0x1337 ),                          cx                                                          ;register                 to    direct memory
          add                           bp,                                     word  [ ebp + esi ]                                         ;memory                   to    register
          add                           bp,                                     es:( 0x2342 )                                               ;memory                   to    register
          add                           cx,                                     0x23                                                        ;immediate sign extended  to    register
          add                           dx,                                     0x1337                                                      ;immediate                to    register
          add                           word  [ ebp ],                          0x23                                                        ;immediate sign extended  to    memory
          add                           word  [ edi ],                          0x2342                                                      ;immediate                to    memory
          add                           ax,                                     0xabcd                                                      ;immediate                to    accumulator
          ;---
          neg                           ax                                                                                                  ;register
          neg                           word  [ 3 * eax + 0x3412 ]                                                                          ;register
          ;---
          imul                          cx                                                                                                  ;1-operand imul           with  register
          imul                          word  [ eax ]                                                                                       ;1-operand imul           with  memory
          imul                          dx:ax,                                  ax                                                          ;1-operand imul (better readable)
          imul                          bx,                                     si                                                          ;2-operand imul: bx = bx * si
          imul                          bx,                                     word  [ esi ]                                               ;2-operand imul: bx = bx * [ esi ]
          imul                          ax,                                     cx,                                     0x23                ;3-operand imul: ax = cx * sign-extended immediate value
          imul                          ax,                                     cx,                                     0x1337              ;3-operand imul: ax = cx * immediate value
          ;---
          movsw                                                                                                                             ;simple instruction
          ;---
          shl                           ax,                                     1                                                           ;register                 with  1
          shl                           ax,                                     3                                                           ;register                 with  immediate
          shr                           ax,                                     cl                                                          ;register                 with  cl
          ;---
          inc                           ax                                                                                                  ;register
          inc                           word  [ 2 * eax ]                                                                                   ;memory
          ;---
          lds                           ax,                                     [ ebx ]                                                     ;lds address to ds + register
          les                           ax,                                     [ ebx ]                                                     ;lds address to es + register
          lea                           ax,                                     [ ebp + esi ]                                               ;load effective address to register
          ;---
          cmp                           dx,                                     bx                                                          ;register                 with  register
          cmp                           word  [ eax + 4 * ebx + 0x1337 ],       cx                                                          ;register                 with  memory
          cmp                           dx,                                     word  [ eax + 2 * ebx + 0x2342 ]                            ;memory                   with  register
          cmp                           si,                                     0x1234                                                      ;immediate value          with  register
          cmp                           word  [ eax + 4 * ebx + 0x1337 ],       0x1234                                                      ;immediate value          with  memory
          cmp                           ax,                                     0x2342                                                      ;immediate value          with  accumulator
          ;---
          test                          dx,                                     bx                                                          ;register                 with  register
          test                          word  [ eax + 4 * ebx + 0x1337 ],       cx                                                          ;register                 with  memory
          test                          dx,                                     word  [ eax + 2 * ebx + 0x2342 ]                            ;memory                   with  register
          test                          si,                                     0x1234                                                      ;immediate value          with  register
          test                          word  [ eax + 4 * ebx + 0x1337 ],       0x1234                                                      ;immediate value          with  memory
          test                          ax,                                     0x2342                                                      ;immediate value          with  accumulator
          ;---
          push                          bx                                                                                                  ;register
          push                          word  [ ecx + edx + 0x23 ]                                                                          ;memory
          pop                           cx                                                                                                  ;register
          pop                           word  [ eax + ecx * 2 ]                                                                             ;memory
          ;---
          mov                           dx,                                     bx                                                          ;register                 to    register
          mov                           word  [ edi ],                          sp                                                          ;register                 to    memory
          mov                           bx,                                     word  [ esi ]                                               ;memory                   to    register
          mov                           dx,                                     0x1337                                                      ;immediate                to    register
          mov                           word  [ eax + esi ],                    0x1337                                                      ;immediate                to    memory
          mov                           ss:( 0x2342 ),                          ax                                                          ;accumulator              to    direct memory
          mov                           ax,                                     ss:( 0x2342 )                                               ;direct memory            to    accumulator
          ;---
          xchg                          bx,                                     cx                                                          ;register                 with  register
          xchg                          word  [ eax ],                          bx                                                          ;register                 with  memory
          xchg                          bx,                                     word  [ eax ]                                               ;should be the same as before
          ;---
          in                            ax,                                     0x23                                                        ;immediate port           to    accumulator
          in                            ax,                                     dx                                                          ;port given in dx         to    accumulator
          out                           0x12,                                   ax                                                          ;immediate port           from  accumulator
          out                           dx,                                     ax                                                          ;port given in dx         from  accumulator
          bound                         bx,                                     dword [ eax ]                                               ;simple instruction
          lar                           cx,                                     dx                                                          ;register
          lar                           bx,                                     word [ edi ]                                                ;16 bit memory
          arpl                          cx,                                     dx                                                          ;simple instruction
          arpl                          word [ di ],                            bx                                                          ;simple instruction
          sldt                          ax
          sldt                          word [ bx ]
          movzx                         ax,                                     bx                                                          ;16 bit register          to    register
          movzx                         ax,                                     bl                                                          ;8  bit register          to    register
          movzx                         ax,                                     word  [ esi ]                                               ;16 bit memory            to    register
          movzx                         ax,                                     byte  [ edi ]                                               ;8  bit memory            to    register
          shld                          cx,                                     dx,                                     8                   ;register                 with  register and immediate value
          shld                          sp,                                     bx,                                     cl                  ;register                 with  register and cl
          shld                          word  [ esi ],                          si,                                     8                   ;memory                   with  register and immediate value
          shld                          word  [ edi ],                          di,                                     cl                  ;memory                   with  register and cl
          bsr                           si,                                     dx                                                          ;search register, result  to    register
          bsr                           si,                                     word  [ eax + esi ]                                         ;search memory,   result  to    register
          bt                            cx,                                     0x23                                                        ;register                 with  8 bit immediate value
          bt                            word  [ ecx ],                          0x23                                                        ;memory                   with  8 bit immediate value
          bt                            cx,                                     bx                                                          ;register                 with  register
          bt                            word  [ ecx ],                          cx                                                          ;memory                   with  register
        ;}
        nop
        ;( 8-bit )
        ;{
          add                           ch,                                     ah                                                          ;register                 to    register
          add                           byte  [ 2 * eax + edx ],                cl                                                          ;register                 to    memory
          add                           ss:( 0x1337 ),                          cl                                                          ;register                 to    direct memory
          add                           dh,                                     byte  [ ebp + esi ]                                         ;memory                   to    register
          add                           dh,                                     es:( 0x2342 )                                               ;memory                   to    register
          add                           dl,                                     0x42                                                        ;immediate                to    register
          add                           byte  [ ebp ],                          0x23                                                        ;immediate sign extended  to    memory
          add                           byte  [ edi ],                          0x23                                                        ;immediate                to    memory
          add                           al,                                     0xab                                                        ;immediate                to    accumulator
          ;---
          neg                           al                                                                                                  ;register
          neg                           byte  [ 3 * eax + 0x3412 ]                                                                          ;register
          ;---
          imul                          cl                                                                                                  ;1-operand imul           with  register
          imul                          byte  [ eax ]                                                                                       ;1-operand imul           with  memory
          imul                          ax,                                     al                                                          ;1-operand imul (better readable)
          ;---
          movsb                                                                                                                             ;simple instruction
          ;---
          shl                           al,                                     1                                                           ;register                 with  1
          shl                           al,                                     3                                                           ;register                 with  immediate
          shr                           al,                                     cl                                                          ;register                 with  cl
          ;---
          inc                           al                                                                                                  ;register
          inc                           byte  [ 2 * eax ]                                                                                   ;memory
          ;---
          cmp                           dl,                                     bl                                                          ;register                 with  register
          cmp                           byte  [ eax + 4 * ebx + 0x1337 ],       cl                                                          ;register                 with  memory
          cmp                           dl,                                     byte  [ eax + 2 * ebx + 0x2342 ]                            ;memory                   with  register
          cmp                           bl,                                     0x12                                                        ;immediate value          with  register
          cmp                           byte  [ eax + 4 * ebx + 0x1337 ],       0x12                                                        ;immediate value          with  memory
          cmp                           al,                                     0x23                                                        ;immediate value          with  accumulator
          ;---
          test                          dl,                                     bl                                                          ;register                 with  register
          test                          byte  [ eax + 4 * ebx + 0x1337 ],       cl                                                          ;register                 with  memory
          test                          dl,                                     byte  [ eax + 2 * ebx + 0x2342 ]                            ;memory                   with  register
          test                          bh,                                     0x12                                                        ;immediate value          with  register
          test                          byte  [ eax + 4 * ebx + 0x1337 ],       0x12                                                        ;immediate value          with  memory
          test                          al,                                     0x23                                                        ;immediate value          with  accumulator
          ;---
          mov                           dl,                                     bl                                                          ;register                 to    register
          mov                           byte  [ edi ],                          bh                                                          ;register                 to    memory
          mov                           bl,                                     byte  [ esi ]                                               ;memory                   to    register
          mov                           dl,                                     0x13                                                        ;immediate                to    register
          mov                           byte  [ eax + esi ],                    0x13                                                        ;immediate                to    memory
          mov                           ss:( 0x2342 ),                          al                                                          ;accumulator              to    direct memory
          mov                           al,                                     ss:( 0x2342 )                                               ;direct memory            to    accumulator
          ;---
          xchg                          bl,                                     cl                                                          ;register                 with  register
          xchg                          byte  [ eax ],                          bl                                                          ;register                 with  memory
          xchg                          bl,                                     byte  [ eax ]                                               ;should be the same as before
          ;---
          in                            al,                                     0x23                                                        ;immediate port           to    accumulator
          in                            al,                                     dx                                                          ;port given in dx         to    accumulator
          out                           0x12,                                   al                                                          ;immediate port           from  accumulator
          out                           dx,                                     al                                                          ;port given in dx         from  accumulator
          setno                         cl                                                                                                  ;register
          setno                         byte  [ esi ]                                                                                       ;memory
        ;}
      End Repeat
    ;}
    ;( negative test, this should not work )
    ;{
      Repeat ( 1 - testPositive )
      End Repeat
    ;}
  elf@@codeFinaliser
  lister@@display
end listing
